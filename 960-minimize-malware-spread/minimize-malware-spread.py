class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        adj_list = {i : [] for i in range(n)}

        for i in range(n):
            for j in range(n):
                if i != j and graph[i][j] != 0:
                    adj_list[i].append(j)

        component_ids = [-1] * n
        component_index = 0

        def dfs(node, component_index):
            stack = [node]
            component_ids[node] = component_index

            while stack:
                u = stack.pop()

                for v in adj_list[u]:
                    if component_ids[v] == -1:
                        component_ids[v] = component_index
                        stack.append(v)

        for i in range(n):
            if component_ids[i] == -1:
                dfs(i, component_index)
                component_index += 1
        
        component_size = [0] * component_index
        for i in range(n):
            component_size[component_ids[i]] += 1

        infected_count = [0] * component_index
        for node in initial:
            infected_count[component_ids[node]] += 1

        result = min(initial)
        max_saved = -1
        for node in initial:
            component_id = component_ids[node]
            if infected_count[component_id] == 1:
                saved = component_size[component_id]
                if saved > max_saved or (saved == max_saved and node < result):
                    max_saved = saved
                    result = node

        return result



